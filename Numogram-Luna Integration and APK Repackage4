name: Numogram-Luna Integration and APK Repackage

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Python for Numogram AI backend
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip openjdk-11-jdk
        python -m pip install --upgrade pip
        pip install fastapi uvicorn pydantic numpy

    # Step 3: Set up Docker for API container
    - name: Set up Docker
      run: |
        echo "FROM python:3.11-slim" > Dockerfile
        echo "WORKDIR /app" >> Dockerfile
        echo "COPY . /app" >> Dockerfile
        echo "RUN pip install fastapi uvicorn pydantic numpy" >> Dockerfile
        echo 'CMD ["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8000"]' >> Dockerfile

    - name: Build Docker Image
      run: docker build -t numogram-luna-app .

    # Step 4: Run API Server (optional during workflow)
    - name: Run Docker Container
      run: docker run -d -p 8000:8000 numogram-luna-app

    # Step 5: Install required tools
    - name: Install OpenJDK and APKTool
      run: |
        sudo apt-get install -y openjdk-11-jdk
        wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.6.1.jar -O apktool.jar
        wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool -O apktool
        chmod +x apktool
        sudo mv apktool /usr/local/bin/

    # NEW STEP: Download or locate the APK file
    - name: Download or locate APK
      run: |
        # Option 1: If the APK is stored in your repository (uncomment if applicable)
        # echo "Using APK from repository"
        
        # Option 2: Download the APK from a URL (replace with your actual URL)
        wget https://your-storage-location.com/AI_Friend.apk -O AI_Friend.apk
        
        # Verify the APK exists
        ls -la AI_Friend.apk

    # Step 6: Decompile APK
    - name: Decompile APK
      run: |
        # Make sure apktool.jar is in the current directory
        java -jar apktool.jar d AI_Friend.apk -o AI_Friend_decompiled

    # Step 7: Ensure numogram directory exists
    - name: Create integration directories if needed
      run: |
        mkdir -p AI_Friend_decompiled/assets/numogram/

    # Step 8: Modify APK (Insert Numogram code)
    - name: Modify APK (Add Numogram-Luna Integration)
      run: |
        echo "Integrating Numogram with Luna's Core..."
        # Make sure the numogram_code directory exists or is created
        if [ -d "./numogram_code" ]; then
          cp -r ./numogram_code/* AI_Friend_decompiled/assets/numogram/
          echo "Integration complete."
        else
          echo "Warning: numogram_code directory not found. Creating placeholder..."
          mkdir -p AI_Friend_decompiled/assets/numogram/
          echo "// Numogram integration placeholder" > AI_Friend_decompiled/assets/numogram/placeholder.js
        fi

    # Step 9: Recompile APK
    - name: Recompile APK
      run: |
        java -jar apktool.jar b AI_Friend_decompiled -o AI_Friend_Modified.apk

    # Step 10: Upload Modified APK as Artifact
    - name: Upload Modified APK
      uses: actions/upload-artifact@v4
      with:
        name: modified-apk
        path: AI_Friend_Modified.apk
