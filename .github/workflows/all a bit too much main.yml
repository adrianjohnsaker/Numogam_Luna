name: Numogram-Luna APK Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.11'
  JAVA_VERSION: '11'
  APK_FILE_ID: '1-0851uVsVN9N1ghMQePcFSUV-TyCQnZd'

jobs:
  build-and-integrate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip git
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn pydantic numpy requests gdown

      - name: Prepare Numogram Integration Files
        run: |
          mkdir -p numogram_integration
          cat > numogram_integration/numogram_core.py << 'EOF'
import json
from typing import List, Dict

class NumogramEngine:
    def __init__(self, zones_config: str = 'zones.json'):
        with open(zones_config, 'r') as f:
            self.zones_config = json.load(f)

    def validate_zone(self, zone: str) -> bool:
        return zone in self.zones_config['zones']

    def zone_transition(self, current_zone: str, user_input: str) -> List[str]:
        if not self.validate_zone(current_zone):
            raise ValueError(f"Invalid
